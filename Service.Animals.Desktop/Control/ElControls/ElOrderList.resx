<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAH8AAAB/CAYAAADGvR0TAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA3NJREFUeF7t3bdrVWEYx/GLYC/Ye+8aHKzopv+IZFJwsAwqQVBHB0Ecxc1RcBAd
        BBcHFwdxcXK0i9h79/dwEZL4JOTmnvY+7/cD38HxvIefxpOT3BYAAAAAAAAAAAAAAAAAAAAAAAhnm9qn
        TqnTGXdS7Vd2HuH1qLvqD/2XncsuFdJu9Ul5F07tvis7p1BmqhfKu2AamJ2TnVcYJ5R3oeTXp8K4p7yL
        JL87Kgz+yu+slyqMZ8q7SPJ7pMK4pbyLJL8bKoxe5V0k+e1VYYxTD5V3oTQwOyc7r1AOKO9iaWB2TuGM
        Vw+Ud8HUzr7Kt3MKyf4t8y6a2tk3e8Iaq54o78Jzz85lmgrtkPIuPvcOqvAmqqfKO4Bcs/Owc8nCEeUd
        Qq4dVtmYpPh/f7tXys4jK/Yal3cYuRX6K/yh2FOs3L/bZ9c/XWXpmPIOJZeOqmxNUY+VdzDRe68mq6zl
        +m//GZU9e5ad21O/D2qGguS2flbfj60/l6d+tvpQr2YXIZdn/ucVBrGvfKOv/6Oap+CIvn5WPwxbf9TX
        vG318xWGEXX9rH4E7Knfc+UdYKrZ6hcojEC09bP6Dtj67fvc3kGm1le1UKEDx5V3mKl1QaFDU9Vr5R1o
        Kn1TixRGIfX1s/ou2PrfKO9gmx6rL0Cq62f1BbCfYklt/bb6xQoFsDdcvUNuapcUCjJLvVXeQTct+116
        qxQKlMr6WX0JUlg/qy9R09fP6ks0W71T3sHXna1+tUKJmrp+Vl+BOappv737l1qjUAF77927CXV1WaEi
        tv7PyrsRVWerX6tQoaasn9XXYK6qe/22+nUKNah7/ay+RvbTL1+Ud2PKzla/XqFG9masd3PKjtU3wBJV
        9fpt9RsUGqDq9V9TaIilqqr1/1abFRqkqvWz+gZapuynY7wbVlS2+i0KDVT2+ll9gy1XP5R347rNVr9V
        ocHsfXnv5nUbq09AWevP4jPuIyh6/TcVErFCFbn+7QoJKWr9rD5BK9VP5d3QTtqhkCB7o9a7oSON1Sds
        o+pm/TsVEjba9d9WSFyP8m7ucNnTvD0KAVxX3k0eqqsKQdj/023N3o0enL2lwzP8YM4p72YP7qxCMBPU
        ReXd8H9dUWE/vx6tVq+6r/rfdPuzfbb/GIUM2CdZblJ83g0AAAAAAAAAAAAAAAAAAAAAAChYq/UX3bPF
        N1tRzToAAAAASUVORK5CYII=
</value>
  </data>
</root>